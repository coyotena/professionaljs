复制变量值
    |--如果从一个变量向另一个变量复制基本类型的值，会在变量对象上创建一个新值，然后把该值复制到为新变量分配的位置上。
        如：var num1 = 5; var num2 = num1;
        在此，num1中保存的值是5。当使用num1的值初始化num2时，num2中也保存了值5。
        但num2中的5与num1中的5是完全独立的。两个变量可以参与任何操作而不会相互影响。
    |--当从一个变量向另一个变量复制引用类型的值时，同样也会将存储在变量对象中的值复制一份放到为新变量分配的空间中。
        不同的是这个值的副本实际上是一个指针，而这个指针指向存储在堆中的一个对象。复制操作结束后，两个变量实际上将引用同一个对象。
        因此，改变其中一个变量，就会影响两一个变量。

传递参数
    ECMAScript中所有函数的参数都是按值传递的。
        也就是说，把函数外部的值复制给函数内部的参数，就和把值从一个变量复制到另一个变量一样。
        基本类型值的传递如同基本类型变量的复制一样，而引用类型值的传递如同引用类型变量的复制一样。
    在向参数传递基本类型的值时，被传递的值会被复制给一个局部变量（即命名参数，或者用ECMAScript的概念来说，就是arguments对象中的一个元素）。
    在向参数传递引用类型的值时，会把这个值在内存中的地址复制给一个局部变量，因此这个局部变量的变化会反映在函数的外部。

