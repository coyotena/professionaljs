数组最多可以包含4 294 967 295 个项，这几乎已经能够满足任何编程需求了。
    如果想添加的项数超过这个上限值，就会发生异常。
    而创建一个初始化大小与这个上限值接近的数组，则可能会导致运行时间超长的脚本错误

数组类似栈的行为（末尾操作）
    push()方法可以接收任意数量的参数，把它们逐个添加到数组末尾，并返回修改后数组的长度。
    pop()方法则从数组移除最后一项，减少数组的length值，然后返回移除的项。

数组头部操作
    shift()方法能够移除数组中的第一项并返回该项，同时将数组长度减1
    unshift()方法能够在数组前端添加任意个项并返回新数组的长度

重排序方法
    reverse()方法会反转数组项的顺序
    sort()方法按升序排列数组项——即最小的值位于最前面，最大的值排在最后面。
        为了实现排序，sort()方法会调用每个数组项的toString()转型方法，然后比较得到的字符串

操作方法
    concat()方法可以基于当前数组中的所有项创建一个新数组。
        这个方法会先创建当前数组一个副本，然后将接收到的参数添加到这个副本的末尾，然后返回新构建的数组。
        不会影响原始数组
    slice()方法能够基于当前数组中的一或多个项创建一个新数组。
        可以接受一或两个参数，即要返回项的起始和结束位置。
            如果slice()方法的参数中有一个负数，则用数组长度加上该数来确定相应的位置
            如果结束位置小于起始位置，返回空数组
        在只有一个参数的情况下，返回从该参数指定位置开始到当前数组末尾的所有项。
        如果有两个参数，返回起始和结束位置之间的项——但不包括结束位置的项。
        不会影响原始数组
    splice()方法，这个方法恐怕要算是最强大的数组方法了，它有很多种用法。
        splice()方法始终都会返回一个数组，该数组中包含从原始数组中删除的项（如果没有删除任何项，则返回一个空数组）
        最主要用途是向数组的中部插入项，但是用这种方法的方式有如下3中
        |--删除：可以删除任意数量的项，只需指定2个参数：要删除的第一项的位置和要删除的项数。
        |--插入：可以向指定位置插入任意数量的项，只需提供3个参数：起始位置、0（要删除的项数）和要插入的项。可以插入任意多个项。
        |--替换：可以向指定位置插入任意数量的项，且同时删除任意数量的项，只需指定3个参数：起始位置、要删除的项数和要插入的任意数量的项。
            插入的项不必与删除的项相等





